type: custom:vertical-stack-in-card
cards:
  - features:
      - type: custom:service-call
        entries:
          - type: selector
            entity_id: fan.turntable
            value_attribute: state
            options:
              - type: button
                entity_id: fan.turntable
                icon: mdi:stop-circle
                option: "off"
                tap_action:
                  action: call-service
                  service: fan.turn_off
                  target:
                    entity_id: fan.turntable
              - type: button
                entity_id: fan.turntable
                icon: mdi:play-circle
                option: "on"
                tap_action:
                  action: call-service
                  service: fan.turn_on
                  target:
                    entity_id: fan.turntable
    type: tile
    entity: fan.turntable
    color: green
    vertical: false
    layout_options:
      grid_columns: 2
    features_position: inline
    name: Schallplattenspieler
    show_entity_picture: false
    hide_state: false
    icon_tap_action:
      action: toggle
    card_mod:
      style: |
        #info {
          display: none !important;
        }
        .content { 
          visibility: hidden !important;
          margin-bottom: -7px !important;
        }
        ha-card { 
          background: none;
          box-shadow: none;
        } 
  - type: custom:mushroom-entity-card
    entity: sensor.turntable_current_state
    name: Turntable
    vertical: false
    layout_options:
      grid_columns: 2
    features_position: inline
    icon: mdi:play-circle
    icon_color: gray
    tap_action: none
    show_entity_picture: false
    hide_state: false
    card_mod:
      style:
        mushroom-shape-icon$: >
          /* 1) Define blink keyframes; alternate hover: filter:
          brightness(0.94); */

          /* GRAY: #ECECEC / #363636 with icon #9E9E9E; hover: #DDD / #4A4A4A */
          /* GREEN: #D8EDD7 / #273A27 with icon: #4CAF50 ; hover: #C4E3C3 /
          #2E502F */

          @keyframes blink-green-off {
            0%,49%   { --shape-color: #D8EDD7; }
            50%,100% { --shape-color: #DDD; }
          } @keyframes blink-green-off-dark {
            0%,49%   { --shape-color: #273A27; }
            50%,100% { --shape-color: #363636; }
          } @keyframes blink-green-off-hover {
            0%,49%   { --shape-color: #C4E3C3; }
            50%,100% { --shape-color: #DDD; }
          } @keyframes blink-green-off-hover-dark {
            0%,49%   { --shape-color: #2E502F; }
            50%,100% { --shape-color: #4A4A4A; }
          }

          /* 2) Apply per-state color or blink animation */

          .shape {
            {% set st = states('sensor.turntable_current_state') %}
            {% if st == 'Playing' %}
              --shape-color: #D8EDD7 !important;
            {% elif st == 'Starting…' or st == 'Stopping…' %}
              animation: blink-green-off 1s infinite !important;
            {% else %}
              --shape-color: #ECECEC !important;
            {% endif %}
          }

          .shape:hover {
            {% set st = states('sensor.turntable_current_state') %}
            {% if st == 'Playing' %}
              --shape-color: #C4E3C3 !important;
            {% elif st == 'Starting…' or st == 'Stopping…' %}
              animation: blink-green-off-hover 1s infinite !important;
            {% else %}
              --shape-color: #DDD !important;
            {% endif %}
          }

          @media (prefers-color-scheme: dark) {
            .shape {
              {% set st = states('sensor.turntable_current_state') %}
              {% if st == 'Playing' %}
                --shape-color: #273A27 !important;
              {% elif st == 'Starting…' or st == 'Stopping…' %}
                animation: blink-green-off-dark 1s infinite !important;
              {% else %}
                --shape-color: #363636 !important;
              {% endif %}
            }

            .shape:hover {
              {% set st = states('sensor.turntable_current_state') %}
              {% if st == 'Playing' %}
                --shape-color: #2E502F !important;
              {% elif st == 'Starting…' or st == 'Stopping…' %}
                animation: blink-green-off-hover-dark 1s infinite !important;
              {% else %}
                --shape-color: #4A4A4A !important;
              {% endif %}
            }
          }
        .: |
          @keyframes blink-green-off-icon {
            0%,49%   { color: #4CAF50; }
            50%,100% { color: #9E9E9E; }
          }
          ha-state-icon {
            {% set st = states('sensor.turntable_current_state') %}
            {% if st == 'Playing' %}
              color: #4CAF50 !important;
            {% elif st == 'Starting…' or st == 'Stopping…' %}
              animation: blink-green-off-icon 1s infinite !important;
            {% else %}
              color: #9E9E9E !important;
            {% endif %}
          }
          ha-card {
            width: 38% !important;
            box-shadow: none !important;
            margin-top: -50px !important;
            background: none !important;
          }
          .content {
            margin-bottom: -50px !important;
          }
  - type: tile
    entity: select.turntable_speed
    name: Turntable Speed
    icon: mdi:speedometer
    color: deepskyblue
    show_entity_picture: false
    hide_state: false
    state_content: state
    vertical: false
    layout_options:
      grid_columns: 3
    features_position: inline
    features:
      - type: custom:service-call
        entries:
          - type: selector
            entity_id: select.turntable_speed
            value_attribute: state
            options:
              - type: button
                icon: mdi:speedometer-slow
                option: 33 RPM
                tap_action:
                  action: call-service
                  service: select.select_option
                  target:
                    entity_id: select.turntable_speed
                  data:
                    option: 33 RPM
              - type: button
                icon: mdi:speedometer-medium
                option: 45 RPM
                tap_action:
                  action: call-service
                  service: select.select_option
                  target:
                    entity_id: select.turntable_speed
                  data:
                    option: 45 RPM
              - type: button
                icon: mdi:speedometer
                option: 78 RPM
                tap_action:
                  action: call-service
                  service: select.select_option
                  target:
                    entity_id: select.turntable_speed
                  data:
                    option: 78 RPM
    card_mod:
      style: |
        ha-card {
          width: 130% !important;
          margin-left: -30% !important;
          box-shadow: none !important;
        }
        .content {
          visibility: hidden !important;
        }
  - type: custom:mushroom-entity-card
    entity: sensor.turntable_bluetooth_connection_state
    name: Bluetooth
    vertical: false
    layout_options:
      grid_columns: 2
    features_position: inline
    icon: mdi:headphones-bluetooth
    icon_color: gray
    show_entity_picture: false
    hide_state: false
    tap_action:
      action: perform-action
      perform_action: switch.toggle
      target:
        entity_id: switch.turntable_bluetooth
    hold_action:
      action: perform-action
      perform_action: switch.toggle
      target:
        entity_id: switch.turntable_bluetooth_pairing
    card_mod:
      style:
        mushroom-shape-icon$: >
          /* 1) Define blink keyframes; alternate hover: filter:
          brightness(0.94); */

          /* GRAY: #ECECEC / #363636 with icon #9E9E9E; hover: #DDD / #4A4A4A */
          /* BLUE: #D6EBFD / #213448 with icon #2096F3; hover: #B8DBFB / #224768
          */ /* RED: #FFDBD8 / #482522 with icon #F44336; hover: #FFC0BB /
          #682B26 */

          @keyframes blink-blue-off {
            0%,49%   { --shape-color: #D6EBFD; }
            50%,100% { --shape-color: #DDD; }
          } @keyframes blink-blue-off-dark {
            0%,49%   { --shape-color: #213448; }
            50%,100% { --shape-color: #363636; }
          } @keyframes blink-blue-off-hover {
            0%,49%   { --shape-color: #B8DBFB; }
            50%,100% { --shape-color: #DDD; }
          } @keyframes blink-blue-off-hover-dark {
            0%,49%   { --shape-color: #224768; }
            50%,100% { --shape-color: #4A4A4A; }
          }

          @keyframes blink-blue-red {
            0%,49%   { --shape-color: #D6EBFD; }
            50%,100% { --shape-color: #FFDBD8; }
          } @keyframes blink-blue-red-dark {
            0%,49%   { --shape-color: #213448; }
            50%,100% { --shape-color: #482522; }
          } @keyframes blink-blue-red-hover {
            0%,49%   { --shape-color: #B8DBFB; }
            50%,100% { --shape-color: #FFC0BB; }
          } @keyframes blink-blue-red-hover-dark {
            0%,49%   { --shape-color: #224768; }
            50%,100% { --shape-color: #682B26; }
          }

          /* 2) Apply per-state color or blink animation */

          .shape {
            {% set st = states('sensor.turntable_bluetooth_connection_state') %}
            {% if st == 'Connected' %}
              --shape-color: #D6EBFD !important;   /* light blue */
            {% elif st == 'Disconnected' %}
              --shape-color: #FFDBD8 !important;   /* light red */
            {% elif st == 'Connecting…' %}
              animation: blink-blue-off 1s infinite !important;
            {% elif st == 'Pairing…' %}
              animation: blink-blue-red 1s infinite !important;
            {% else %}
              --shape-color: #ECECEC !important;   /* light grey (default) */
            {% endif %}
          }

          .shape:hover {
            {% set st = states('sensor.turntable_bluetooth_connection_state') %}
            {% if st == 'Connected' %}
              --shape-color: #B8DBFB !important;   /* light blue */
            {% elif st == 'Disconnected' %}
              --shape-color: #FFC0BB !important;   /* light red */
            {% elif st == 'Connecting…' %}
              animation: blink-blue-off-hover 1s infinite !important;
            {% elif st == 'Pairing…' %}
              animation: blink-blue-red-hover 1s infinite !important;
            {% else %}
              --shape-color: #DDD !important;   /* light grey (default) */
            {% endif %}
          }

          @media (prefers-color-scheme: dark) {
            .shape {
              {% set st = states('sensor.turntable_bluetooth_connection_state') %}
              {% if st == 'Connected' %}
                --shape-color: #213448 !important;  /* dark blue */
              {% elif st == 'Disconnected' %}
                --shape-color: #482522 !important;  /* dark red */
              {% elif st == 'Connecting…' %}
                animation: blink-blue-off-dark 1s infinite !important;
              {% elif st == 'Pairing…' %}
                animation: blink-blue-red-dark 1s infinite !important;
              {% else %}
                --shape-color: #363636 !important;  /* dark grey */
              {% endif %}
            }
            .shape:hover {
              {% set st = states('sensor.turntable_bluetooth_connection_state') %}
              {% if st == 'Connected' %}
                --shape-color: #224768 !important;  /* blue hover dark */
              {% elif st == 'Disconnected' %}
                --shape-color: #682B26 !important;  /* red hover dark */
              {% elif st == 'Connecting…' %}
                animation: blink-blue-off-hover-dark 1s infinite !important;
              {% elif st == 'Pairing…' %}
                animation: blink-blue-red-hover-dark 1s infinite !important;
              {% else %}
                --shape-color: #4A4A4A !important;  /* grey hover dark */
              {% endif %}
            }
          }
        .: |
          @keyframes blink-blue-off-icon {
            0%,49%   { color: #2096F3; }
            50%,100% { color: #9E9E9E; }
          }
          @keyframes blink-blue-red-icon {
            0%,49%   { color: #F44336; }
            50%,100% { color: #2096F3; }
          }
          ha-state-icon {
            {% set st = states('sensor.turntable_bluetooth_connection_state') %}
            {% if st == 'Connected' %}
              color: #2096F3 !important;   /* blue */
            {% elif st == 'Disconnected' %}
              color: #F44336 !important;   /* red */
            {% elif st == 'Connecting…' %}
              animation: blink-blue-off-icon 1s infinite !important;
            {% elif st == 'Pairing…' %}
              animation: blink-blue-red-icon 1s infinite !important;
            {% else %}
              color: #9E9E9E !important;   /* grey */
            {% endif %}
          }
          ha-card {
            width: 38% !important;
            box-shadow: none !important;
            margin-top: -56px !important;
          }
  - type: tile
    entity: switch.turntable_repeat
    name: Repeat
    color: coral
    vertical: false
    layout_options:
      grid_columns: 2
    features_position: inline
    icon: mdi:repeat-variant
    show_entity_picture: false
    hide_state: false
    card_mod:
      style: |
        #info {
          display: none !important;
        }
  - type: conditional
    conditions:
      - entity: switch.turntable_repeat
        state: "on"
    card:
      features:
        - type: custom:service-call
          entries:
            - type: selector
              entity_id: sensor.turntable_repeat_remaining
              value_attribute: state
              options:
                - type: icon
                  icon: mdi:numeric-1-circle-outline
                  option: "1.0"
                - type: icon
                  icon: mdi:numeric-2-circle-outline
                  option: "2.0"
                - type: icon
                  icon: mdi:numeric-3-circle-outline
                  option: "3.0"
                - type: icon
                  icon: mdi:numeric-4-circle-outline
                  option: "4.0"
                - type: icon
                  icon: mdi:numeric-5-circle-outline
                  option: "5.0"
                - type: icon
                  icon: mdi:numeric-6-circle-outline
                  option: "6.0"
                - type: icon
                  icon: mdi:numeric-7-circle-outline
                  option: "7.0"
                - type: icon
                  icon: mdi:numeric-8-circle-outline
                  option: "8.0"
                - type: icon
                  icon: mdi:numeric-9-circle-outline
                  option: "9.0"
      type: tile
      entity: sensor.turntable_repeat_remaining
      name: Repeat Count
      color: lightsalmon
      vertical: false
      layout_options:
        grid_columns: 3
      state_content: state
      features_position: bottom
      card_mod:
        style: |
          ha-card {
            width: 89% !important;
            margin-left: 11% !important;
            box-shadow: none !important;
            background: none !important;
          }
          .content {
            visibility: hidden !important;
            margin-top: -105px !important;
          }
  - features:
      - type: custom:service-call
        entries:
          - type: selector
            entity_id: number.turntable_repeat_count
            value_attribute: state
            options:
              - type: button
                icon: mdi:numeric-1-circle-outline
                option: "1.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 1
              - type: button
                icon: mdi:numeric-2-circle-outline
                option: "2.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 2
              - type: button
                icon: mdi:numeric-3-circle-outline
                option: "3.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 3
              - type: button
                icon: mdi:numeric-4-circle-outline
                option: "4.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 4
              - type: button
                icon: mdi:numeric-5-circle-outline
                option: "5.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 5
              - type: button
                icon: mdi:numeric-6-circle-outline
                option: "6.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 6
              - type: button
                icon: mdi:numeric-7-circle-outline
                option: "7.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 7
              - type: button
                icon: mdi:numeric-8-circle-outline
                option: "8.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 8
              - type: button
                icon: mdi:numeric-9-circle-outline
                option: "9.0"
                tap_action:
                  action: call-service
                  service: number.set_value
                  target:
                    entity_id: number.turntable_repeat_count
                  data:
                    value: 9
    type: tile
    entity: switch.turntable_repeat
    name: false
    color: coral
    vertical: false
    layout_options:
      grid_columns: 3
    state_content: state
    features_position: bottom
    card_mod:
      style: |
        ha-card {
          width: 89% !important;
          margin-left: 11% !important;
          box-shadow: none !important;
        }
        .content {
          visibility: hidden !important;
          margin-top: -999px !important;
        }
